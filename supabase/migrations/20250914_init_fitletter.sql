-- FitLetter initial schema for Supabase (Postgres)
-- This script creates required tables and disables RLS for quick functionality.
-- For production, replace DISABLE RLS with proper row-level policies.

-- Users table
CREATE TABLE IF NOT EXISTS public.users (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email TEXT UNIQUE NOT NULL,
  name TEXT,
  password_hash TEXT,
  created_at BIGINT DEFAULT (EXTRACT(EPOCH FROM NOW()))::BIGINT
);

-- Sessions table
CREATE TABLE IF NOT EXISTS public.sessions (
  id TEXT PRIMARY KEY,
  user_id INTEGER NOT NULL REFERENCES public.users(id) ON DELETE CASCADE,
  expires_at BIGINT NOT NULL,
  created_at BIGINT DEFAULT (EXTRACT(EPOCH FROM NOW()))::BIGINT
);

CREATE INDEX IF NOT EXISTS idx_sessions_user_id ON public.sessions(user_id);
CREATE INDEX IF NOT EXISTS idx_sessions_expires_at ON public.sessions(expires_at);

-- Resumes table
CREATE TABLE IF NOT EXISTS public.resumes (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  title TEXT NOT NULL,
  -- Header
  name TEXT NOT NULL,
  phone TEXT NOT NULL,
  email TEXT NOT NULL,
  linkedin_url TEXT,
  portfolio_url TEXT,
  -- Sections (stringified JSON)
  summary TEXT NOT NULL,
  skills TEXT NOT NULL,
  experiences TEXT NOT NULL,
  projects TEXT NOT NULL,
  education TEXT NOT NULL,
  -- FK
  user_id INTEGER NOT NULL REFERENCES public.users(id) ON DELETE CASCADE,
  created_at BIGINT DEFAULT (EXTRACT(EPOCH FROM NOW()))::BIGINT,
  updated_at BIGINT
);

CREATE INDEX IF NOT EXISTS idx_resumes_user_id ON public.resumes(user_id);
CREATE INDEX IF NOT EXISTS idx_resumes_created_at ON public.resumes(created_at);

-- Letters table
CREATE TABLE IF NOT EXISTS public.letters (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  job_title TEXT NOT NULL,
  company TEXT NOT NULL,
  job_desc TEXT NOT NULL,
  content TEXT NOT NULL,
  tone TEXT NOT NULL,
  ats_score INTEGER,
  user_id INTEGER NOT NULL REFERENCES public.users(id) ON DELETE CASCADE,
  resume_id INTEGER NOT NULL REFERENCES public.resumes(id) ON DELETE CASCADE,
  created_at BIGINT DEFAULT (EXTRACT(EPOCH FROM NOW()))::BIGINT
);

CREATE INDEX IF NOT EXISTS idx_letters_user_id ON public.letters(user_id);
CREATE INDEX IF NOT EXISTS idx_letters_resume_id ON public.letters(resume_id);
CREATE INDEX IF NOT EXISTS idx_letters_created_at ON public.letters(created_at);

-- Applications table
CREATE TABLE IF NOT EXISTS public.applications (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  job_title TEXT NOT NULL,
  company TEXT NOT NULL,
  status TEXT NOT NULL DEFAULT 'Saved',
  url TEXT,
  requirements TEXT,
  deadline BIGINT,
  user_id INTEGER NOT NULL REFERENCES public.users(id) ON DELETE CASCADE,
  created_at BIGINT DEFAULT (EXTRACT(EPOCH FROM NOW()))::BIGINT
);

CREATE INDEX IF NOT EXISTS idx_applications_user_id ON public.applications(user_id);
CREATE INDEX IF NOT EXISTS idx_applications_created_at ON public.applications(created_at);
CREATE INDEX IF NOT EXISTS idx_applications_status ON public.applications(status);

-- Enable Row Level Security (RLS) on all tables.
-- Policies are defined in a separate migration (see 20250914_enable_rls_and_policies.sql).
ALTER TABLE public.users ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.sessions ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.resumes ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.letters ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.applications ENABLE ROW LEVEL SECURITY;
