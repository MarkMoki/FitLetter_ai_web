{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/zsmile/Desktop/FitLetter_ai_web/src/app/actions.ts"],"sourcesContent":["\n'use server';\n\nimport {\n  optimizeResumeForAts,\n  OptimizeResumeForAtsInput,\n  OptimizeResumeForAtsOutput,\n} from '@/ai/flows/ats-resume-optimization';\nimport {\n  rewriteForImpact,\n  RewriteForImpactInput,\n} from '@/ai/flows/impactful-rewrite';\nimport {\n  resumeFlawSpotter,\n  ResumeFlawSpotterInput,\n} from '@/ai/flows/resume-flaw-spotter';\nimport {\n  tailoredCoverLetter,\n  TailoredCoverLetterInput,\n  TailoredCoverLetterOutput,\n} from '@/ai/flows/tailored-cover-letter';\nimport { parseResume, ParseResumeInput, ParseResumeOutput } from '@/ai/flows/parse-resume';\nimport { autofillJobDetails, AutofillJobDetailsInput, AutofillJobDetailsOutput } from '@/ai/flows/autofill-job-details';\nimport { db } from '@/db';\nimport { revalidatePath } from 'next/cache';\nimport { requireAuth } from '@/lib/auth';\n\nconst handleError = (error: unknown, defaultMessage: string) => {\n  console.error(error);\n  if (error instanceof Error) {\n    return { error: error.message };\n  }\n  return { error: defaultMessage };\n};\n\nexport async function generateAtsOptimizedResume(\n  input: OptimizeResumeForAtsInput\n): Promise<{ data: OptimizeResumeForAtsOutput | null; error?: string }> {\n  try {\n    const result = await optimizeResumeForAts(input);\n    return { data: result };\n  } catch (error) {\n    return handleError(error, 'Failed to optimize resume for ATS.');\n  }\n}\n\nexport async function generateTailoredCoverLetter(\n  input: TailoredCoverLetterInput\n): Promise<{ data: TailoredCoverLetterOutput | null; error?: string }> {\n  try {\n    const result = await tailoredCoverLetter(input);\n    return { data: result };\n  } catch (error) {\n    return handleError(error, 'Failed to generate cover letter.');\n  }\n}\n\nexport async function generateImpactfulRewrite(input: RewriteForImpactInput) {\n  try {\n    const result = await rewriteForImpact(input);\n    return { data: result };\n  } catch (error) {\n    return handleError(error, 'Failed to rewrite resume section.');\n  }\n}\n\nexport async function findResumeFlaws(input: ResumeFlawSpotterInput) {\n  try {\n    const result = await resumeFlawSpotter(input);\n    return { data: result };\n  } catch (error) {\n    return handleError(error, 'Failed to spot resume flaws.');\n  }\n}\n\nexport async function getResumesForUser(userId: number) {\n  const { user } = await requireAuth();\n  if (user.id !== userId) {\n    return { error: 'Unauthorized access' };\n  }\n\n  try {\n    const { data, error } = await db\n      .from('resumes')\n      .select('*')\n      .eq('user_id', userId)\n      .order('created_at', { ascending: false });\n\n    if (error) return handleError(error, 'Failed to fetch resumes.');\n\n    const parsedResumes = (data || []).map((r: any) => {\n      try {\n        return {\n          id: r.id,\n          title: r.title,\n          name: r.name,\n          phone: r.phone,\n          email: r.email,\n          linkedinUrl: r.linkedin_url,\n          portfolioUrl: r.portfolio_url,\n          summary: r.summary,\n          skills: typeof r.skills === 'string' ? JSON.parse(r.skills) : r.skills,\n          experiences: typeof r.experiences === 'string' ? JSON.parse(r.experiences) : r.experiences,\n          projects: typeof r.projects === 'string' ? JSON.parse(r.projects) : r.projects,\n          education: typeof r.education === 'string' ? JSON.parse(r.education) : r.education,\n          userId: r.user_id,\n          createdAt: new Date((r.created_at as number) * 1000),\n          updatedAt: r.updated_at ? new Date((r.updated_at as number) * 1000) : null,\n        };\n      } catch (e) {\n        console.error('Failed to parse resume data', e);\n        return {\n          id: r.id,\n          title: r.title,\n          name: r.name,\n          phone: r.phone,\n          email: r.email,\n          linkedinUrl: r.linkedin_url,\n          portfolioUrl: r.portfolio_url,\n          summary: r.summary,\n          skills: [],\n          experiences: [],\n          projects: [],\n          education: [],\n          userId: r.user_id,\n          createdAt: new Date((r.created_at as number) * 1000),\n          updatedAt: r.updated_at ? new Date((r.updated_at as number) * 1000) : null,\n        };\n      }\n    });\n\n    return { data: parsedResumes };\n  } catch (error) {\n    return handleError(error, 'Failed to fetch resumes.');\n  }\n}\n\nexport async function saveLetter({\n  jobTitle,\n  company,\n  jobDesc,\n  content,\n  tone,\n  atsScore,\n  resumeId,\n  userId,\n}: {\n  jobTitle: string;\n  company: string;\n  jobDesc: string;\n  content: string;\n  tone: string;\n  atsScore: number;\n  resumeId: number;\n  userId?: number;\n}) {\n  const { user } = await requireAuth();\n\n  try {\n    const { data, error } = await db\n      .from('letters')\n      .insert({\n        job_title: jobTitle,\n        company,\n        job_desc: jobDesc,\n        content,\n        tone,\n        ats_score: atsScore,\n        user_id: user.id,\n        resume_id: resumeId,\n      })\n      .select('*')\n      .single();\n\n    if (error) return handleError(error, 'Failed to save cover letter.');\n\n    revalidatePath('/dashboard');\n    const mapped = data && {\n      id: data.id,\n      jobTitle: data.job_title,\n      company: data.company,\n      jobDesc: data.job_desc,\n      content: data.content,\n      tone: data.tone,\n      atsScore: data.ats_score,\n      userId: data.user_id,\n      resumeId: data.resume_id,\n      createdAt: new Date((data.created_at as number) * 1000),\n    };\n    return { data: mapped as any };\n  } catch (error) {\n    return handleError(error, 'Failed to save cover letter.');\n  }\n}\n\nexport async function getApplicationsForUser(userId: number) {\n  const { user } = await requireAuth();\n  if (user.id !== userId) {\n    return { error: 'Unauthorized access' };\n  }\n\n  try {\n    const { data, error } = await db\n      .from('applications')\n      .select('*')\n      .eq('user_id', userId)\n      .order('created_at', { ascending: false });\n\n    if (error) return handleError(error, 'Failed to fetch applications');\n\n    const mapped = (data || []).map((a: any) => ({\n      id: a.id,\n      jobTitle: a.job_title,\n      company: a.company,\n      status: a.status,\n      url: a.url,\n      requirements: a.requirements,\n      deadline: a.deadline ?? null,\n      userId: a.user_id,\n      createdAt: a.created_at as number,\n    }));\n\n    return { data: mapped as any };\n  } catch (error) {\n    return handleError(error, 'Failed to fetch applications');\n  }\n}\n\nexport async function addApplication(application: {\n  jobTitle: string;\n  company: string;\n  status: string;\n  url?: string;\n  requirements?: string;\n  userId?: number;\n}) {\n  const { user } = await requireAuth();\n\n  try {\n    const { data, error } = await db\n      .from('applications')\n      .insert({\n        job_title: application.jobTitle,\n        company: application.company,\n        status: application.status,\n        url: application.url,\n        requirements: application.requirements,\n        user_id: user.id,\n      })\n      .select('*')\n      .single();\n\n    if (error) return handleError(error, 'Failed to add application');\n\n    revalidatePath('/applications');\n    revalidatePath('/dashboard');\n    const mapped = data && ({\n      id: data.id,\n      jobTitle: data.job_title,\n      company: data.company,\n      status: data.status,\n      url: data.url,\n      requirements: data.requirements,\n      deadline: data.deadline ?? null,\n      userId: data.user_id,\n      createdAt: data.created_at as number,\n    });\n    return { data: mapped as any };\n  } catch(error) {\n    return handleError(error, 'Failed to add application');\n  }\n}\n\nexport async function updateApplicationStatus(id: number, status: string) {\n  const { user } = await requireAuth();\n\n  try {\n    const { error } = await db\n      .from('applications')\n      .update({ status })\n      .eq('id', id)\n      .eq('user_id', user.id);\n\n    if (error) return handleError(error, 'Failed to update application status');\n\n    revalidatePath('/applications');\n    revalidatePath('/dashboard');\n    return { data: { success: true } };\n  } catch (error) {\n    return handleError(error, 'Failed to update application status');\n  }\n}\n\nexport async function parseResumeAndSave(input: ParseResumeInput & { title: string; userId?: number }) {\n  const { user } = await requireAuth();\n\n  try {\n    const parsedData = await parseResume(input);\n\n    const { data, error } = await db\n      .from('resumes')\n      .insert({\n        user_id: user.id,\n        title: input.title,\n        name: parsedData.name,\n        phone: parsedData.phone,\n        email: parsedData.email,\n        linkedin_url: parsedData.linkedinUrl,\n        portfolio_url: parsedData.portfolioUrl,\n        summary: parsedData.summary,\n        skills: JSON.stringify(parsedData.skills),\n        experiences: JSON.stringify(parsedData.experiences),\n        projects: JSON.stringify(parsedData.projects),\n        education: JSON.stringify(parsedData.education),\n      })\n      .select('*')\n      .single();\n\n    if (error) return handleError(error, 'Failed to parse and save resume.');\n\n    revalidatePath('/resumes');\n    const mapped = data && ({\n      id: data.id,\n      title: data.title,\n      name: data.name,\n      phone: data.phone,\n      email: data.email,\n      linkedinUrl: data.linkedin_url,\n      portfolioUrl: data.portfolio_url,\n      summary: data.summary,\n      skills: data.skills,\n      experiences: data.experiences,\n      projects: data.projects,\n      education: data.education,\n      userId: data.user_id,\n      createdAt: data.created_at as number,\n      updatedAt: data.updated_at ?? null,\n    });\n    return { data: mapped as any };\n  } catch (error) {\n    return handleError(error, 'Failed to parse and save resume.');\n  }\n}\n\nexport async function deleteResume(id: number) {\n  const { user } = await requireAuth();\n\n  try {\n    const { error } = await db\n      .from('resumes')\n      .delete()\n      .eq('id', id)\n      .eq('user_id', user.id);\n\n    if (error) return handleError(error, 'Failed to delete resume.');\n\n    revalidatePath('/resumes');\n    revalidatePath('/dashboard');\n    return { data: { success: true } };\n  } catch(e) {\n    return handleError(e, 'Failed to delete resume.')\n  }\n}\n\n\nexport async function deleteLetter(id: number) {\n  const { user } = await requireAuth();\n\n  try {\n    const { error } = await db\n      .from('letters')\n      .delete()\n      .eq('id', id)\n      .eq('user_id', user.id);\n\n    if (error) return handleError(error, 'Failed to delete letter.');\n\n    revalidatePath('/dashboard');\n    return { data: { success: true } };\n  } catch(e) {\n    return handleError(e, 'Failed to delete letter.')\n  }\n}\n\nexport async function deleteUserAccount() {\n  const { user } = await requireAuth();\n\n  try {\n    await db.from('letters').delete().eq('user_id', user.id);\n    await db.from('applications').delete().eq('user_id', user.id);\n    await db.from('resumes').delete().eq('user_id', user.id);\n    await db.from('users').delete().eq('id', user.id);\n\n    revalidatePath('/');\n    return { data: { success: true } };\n  } catch(e) {\n    return handleError(e, 'Failed to delete account.');\n  }\n}\n\nexport async function getLettersForUser(userId: number) {\n  const { user } = await requireAuth();\n  if (user.id !== userId) {\n    return { error: 'Unauthorized access' };\n  }\n\n  try {\n    const { data, error } = await db\n      .from('letters')\n      .select('*')\n      .eq('user_id', userId)\n      .order('created_at', { ascending: false });\n\n    if (error) return handleError(error, 'Failed to fetch letters.');\n\n    const parsedLetters = (data || []).map((l: any) => ({\n      id: l.id,\n      jobTitle: l.job_title,\n      company: l.company,\n      jobDesc: l.job_desc,\n      content: l.content,\n      tone: l.tone,\n      atsScore: l.ats_score,\n      userId: l.user_id,\n      resumeId: l.resume_id,\n      createdAt: new Date((l.created_at as number) * 1000),\n    }));\n\n    return { data: parsedLetters };\n  } catch (error) {\n    return handleError(error, 'Failed to fetch letters.');\n  }\n}\n\nexport async function deleteApplication(id: number) {\n  const { user } = await requireAuth();\n\n  try {\n    const { error } = await db\n      .from('applications')\n      .delete()\n      .eq('id', id)\n      .eq('user_id', user.id);\n\n    if (error) return handleError(error, 'Failed to delete application.');\n\n    revalidatePath('/applications');\n    revalidatePath('/dashboard');\n    return { data: { success: true } };\n  } catch (e) {\n    return handleError(e, 'Failed to delete application.');\n  }\n}\n\n\nexport async function autofillJobDetailsAction(input: AutofillJobDetailsInput): Promise<{data: AutofillJobDetailsOutput | null; error?: string}> {\n    try {\n        const result = await autofillJobDetails(input);\n        return { data: result };\n    } catch(e) {\n        return handleError(e, 'Failed to autofill job details.');\n    }\n}\n\nexport async function updateResume(resume: ParseResumeOutput & { id: number, title: string }) {\n  const { user } = await requireAuth();\n\n  try {\n    const { error } = await db\n      .from('resumes')\n      .update({\n        title: resume.title,\n        name: resume.name,\n        phone: resume.phone,\n        email: resume.email,\n        linkedin_url: resume.linkedinUrl,\n        portfolio_url: resume.portfolioUrl,\n        summary: resume.summary,\n        skills: typeof resume.skills === 'string' ? resume.skills : JSON.stringify(resume.skills),\n        experiences: typeof resume.experiences === 'string' ? resume.experiences : JSON.stringify(resume.experiences),\n        projects: typeof resume.projects === 'string' ? resume.projects : JSON.stringify(resume.projects),\n        education: typeof resume.education === 'string' ? resume.education : JSON.stringify(resume.education),\n        updated_at: Math.floor(Date.now() / 1000),\n      })\n      .eq('id', resume.id)\n      .eq('user_id', user.id);\n\n    if (error) return handleError(error, 'Failed to update resume.');\n\n    revalidatePath('/resumes');\n    revalidatePath('/dashboard');\n    return { data: { success: true } };\n  } catch(e) {\n    return handleError(e, 'Failed to update resume.');\n  }\n}\n"],"names":[],"mappings":";;;;;;IAmMsB,yBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file:///home/zsmile/Desktop/FitLetter_ai_web/src/app/actions.ts"],"sourcesContent":["\n'use server';\n\nimport {\n  optimizeResumeForAts,\n  OptimizeResumeForAtsInput,\n  OptimizeResumeForAtsOutput,\n} from '@/ai/flows/ats-resume-optimization';\nimport {\n  rewriteForImpact,\n  RewriteForImpactInput,\n} from '@/ai/flows/impactful-rewrite';\nimport {\n  resumeFlawSpotter,\n  ResumeFlawSpotterInput,\n} from '@/ai/flows/resume-flaw-spotter';\nimport {\n  tailoredCoverLetter,\n  TailoredCoverLetterInput,\n  TailoredCoverLetterOutput,\n} from '@/ai/flows/tailored-cover-letter';\nimport { parseResume, ParseResumeInput, ParseResumeOutput } from '@/ai/flows/parse-resume';\nimport { autofillJobDetails, AutofillJobDetailsInput, AutofillJobDetailsOutput } from '@/ai/flows/autofill-job-details';\nimport { db } from '@/db';\nimport { revalidatePath } from 'next/cache';\nimport { requireAuth } from '@/lib/auth';\n\nconst handleError = (error: unknown, defaultMessage: string) => {\n  console.error(error);\n  if (error instanceof Error) {\n    return { error: error.message };\n  }\n  return { error: defaultMessage };\n};\n\nexport async function generateAtsOptimizedResume(\n  input: OptimizeResumeForAtsInput\n): Promise<{ data: OptimizeResumeForAtsOutput | null; error?: string }> {\n  try {\n    const result = await optimizeResumeForAts(input);\n    return { data: result };\n  } catch (error) {\n    return handleError(error, 'Failed to optimize resume for ATS.');\n  }\n}\n\nexport async function generateTailoredCoverLetter(\n  input: TailoredCoverLetterInput\n): Promise<{ data: TailoredCoverLetterOutput | null; error?: string }> {\n  try {\n    const result = await tailoredCoverLetter(input);\n    return { data: result };\n  } catch (error) {\n    return handleError(error, 'Failed to generate cover letter.');\n  }\n}\n\nexport async function generateImpactfulRewrite(input: RewriteForImpactInput) {\n  try {\n    const result = await rewriteForImpact(input);\n    return { data: result };\n  } catch (error) {\n    return handleError(error, 'Failed to rewrite resume section.');\n  }\n}\n\nexport async function findResumeFlaws(input: ResumeFlawSpotterInput) {\n  try {\n    const result = await resumeFlawSpotter(input);\n    return { data: result };\n  } catch (error) {\n    return handleError(error, 'Failed to spot resume flaws.');\n  }\n}\n\nexport async function getResumesForUser(userId: number) {\n  const { user } = await requireAuth();\n  if (user.id !== userId) {\n    return { error: 'Unauthorized access' };\n  }\n\n  try {\n    const { data, error } = await db\n      .from('resumes')\n      .select('*')\n      .eq('user_id', userId)\n      .order('created_at', { ascending: false });\n\n    if (error) return handleError(error, 'Failed to fetch resumes.');\n\n    const parsedResumes = (data || []).map((r: any) => {\n      try {\n        return {\n          id: r.id,\n          title: r.title,\n          name: r.name,\n          phone: r.phone,\n          email: r.email,\n          linkedinUrl: r.linkedin_url,\n          portfolioUrl: r.portfolio_url,\n          summary: r.summary,\n          skills: typeof r.skills === 'string' ? JSON.parse(r.skills) : r.skills,\n          experiences: typeof r.experiences === 'string' ? JSON.parse(r.experiences) : r.experiences,\n          projects: typeof r.projects === 'string' ? JSON.parse(r.projects) : r.projects,\n          education: typeof r.education === 'string' ? JSON.parse(r.education) : r.education,\n          userId: r.user_id,\n          createdAt: new Date((r.created_at as number) * 1000),\n          updatedAt: r.updated_at ? new Date((r.updated_at as number) * 1000) : null,\n        };\n      } catch (e) {\n        console.error('Failed to parse resume data', e);\n        return {\n          id: r.id,\n          title: r.title,\n          name: r.name,\n          phone: r.phone,\n          email: r.email,\n          linkedinUrl: r.linkedin_url,\n          portfolioUrl: r.portfolio_url,\n          summary: r.summary,\n          skills: [],\n          experiences: [],\n          projects: [],\n          education: [],\n          userId: r.user_id,\n          createdAt: new Date((r.created_at as number) * 1000),\n          updatedAt: r.updated_at ? new Date((r.updated_at as number) * 1000) : null,\n        };\n      }\n    });\n\n    return { data: parsedResumes };\n  } catch (error) {\n    return handleError(error, 'Failed to fetch resumes.');\n  }\n}\n\nexport async function saveLetter({\n  jobTitle,\n  company,\n  jobDesc,\n  content,\n  tone,\n  atsScore,\n  resumeId,\n  userId,\n}: {\n  jobTitle: string;\n  company: string;\n  jobDesc: string;\n  content: string;\n  tone: string;\n  atsScore: number;\n  resumeId: number;\n  userId?: number;\n}) {\n  const { user } = await requireAuth();\n\n  try {\n    const { data, error } = await db\n      .from('letters')\n      .insert({\n        job_title: jobTitle,\n        company,\n        job_desc: jobDesc,\n        content,\n        tone,\n        ats_score: atsScore,\n        user_id: user.id,\n        resume_id: resumeId,\n      })\n      .select('*')\n      .single();\n\n    if (error) return handleError(error, 'Failed to save cover letter.');\n\n    revalidatePath('/dashboard');\n    const mapped = data && {\n      id: data.id,\n      jobTitle: data.job_title,\n      company: data.company,\n      jobDesc: data.job_desc,\n      content: data.content,\n      tone: data.tone,\n      atsScore: data.ats_score,\n      userId: data.user_id,\n      resumeId: data.resume_id,\n      createdAt: new Date((data.created_at as number) * 1000),\n    };\n    return { data: mapped as any };\n  } catch (error) {\n    return handleError(error, 'Failed to save cover letter.');\n  }\n}\n\nexport async function getApplicationsForUser(userId: number) {\n  const { user } = await requireAuth();\n  if (user.id !== userId) {\n    return { error: 'Unauthorized access' };\n  }\n\n  try {\n    const { data, error } = await db\n      .from('applications')\n      .select('*')\n      .eq('user_id', userId)\n      .order('created_at', { ascending: false });\n\n    if (error) return handleError(error, 'Failed to fetch applications');\n\n    const mapped = (data || []).map((a: any) => ({\n      id: a.id,\n      jobTitle: a.job_title,\n      company: a.company,\n      status: a.status,\n      url: a.url,\n      requirements: a.requirements,\n      deadline: a.deadline ?? null,\n      userId: a.user_id,\n      createdAt: a.created_at as number,\n    }));\n\n    return { data: mapped as any };\n  } catch (error) {\n    return handleError(error, 'Failed to fetch applications');\n  }\n}\n\nexport async function addApplication(application: {\n  jobTitle: string;\n  company: string;\n  status: string;\n  url?: string;\n  requirements?: string;\n  userId?: number;\n}) {\n  const { user } = await requireAuth();\n\n  try {\n    const { data, error } = await db\n      .from('applications')\n      .insert({\n        job_title: application.jobTitle,\n        company: application.company,\n        status: application.status,\n        url: application.url,\n        requirements: application.requirements,\n        user_id: user.id,\n      })\n      .select('*')\n      .single();\n\n    if (error) return handleError(error, 'Failed to add application');\n\n    revalidatePath('/applications');\n    revalidatePath('/dashboard');\n    const mapped = data && ({\n      id: data.id,\n      jobTitle: data.job_title,\n      company: data.company,\n      status: data.status,\n      url: data.url,\n      requirements: data.requirements,\n      deadline: data.deadline ?? null,\n      userId: data.user_id,\n      createdAt: data.created_at as number,\n    });\n    return { data: mapped as any };\n  } catch(error) {\n    return handleError(error, 'Failed to add application');\n  }\n}\n\nexport async function updateApplicationStatus(id: number, status: string) {\n  const { user } = await requireAuth();\n\n  try {\n    const { error } = await db\n      .from('applications')\n      .update({ status })\n      .eq('id', id)\n      .eq('user_id', user.id);\n\n    if (error) return handleError(error, 'Failed to update application status');\n\n    revalidatePath('/applications');\n    revalidatePath('/dashboard');\n    return { data: { success: true } };\n  } catch (error) {\n    return handleError(error, 'Failed to update application status');\n  }\n}\n\nexport async function parseResumeAndSave(input: ParseResumeInput & { title: string; userId?: number }) {\n  const { user } = await requireAuth();\n\n  try {\n    const parsedData = await parseResume(input);\n\n    const { data, error } = await db\n      .from('resumes')\n      .insert({\n        user_id: user.id,\n        title: input.title,\n        name: parsedData.name,\n        phone: parsedData.phone,\n        email: parsedData.email,\n        linkedin_url: parsedData.linkedinUrl,\n        portfolio_url: parsedData.portfolioUrl,\n        summary: parsedData.summary,\n        skills: JSON.stringify(parsedData.skills),\n        experiences: JSON.stringify(parsedData.experiences),\n        projects: JSON.stringify(parsedData.projects),\n        education: JSON.stringify(parsedData.education),\n      })\n      .select('*')\n      .single();\n\n    if (error) return handleError(error, 'Failed to parse and save resume.');\n\n    revalidatePath('/resumes');\n    const mapped = data && ({\n      id: data.id,\n      title: data.title,\n      name: data.name,\n      phone: data.phone,\n      email: data.email,\n      linkedinUrl: data.linkedin_url,\n      portfolioUrl: data.portfolio_url,\n      summary: data.summary,\n      skills: data.skills,\n      experiences: data.experiences,\n      projects: data.projects,\n      education: data.education,\n      userId: data.user_id,\n      createdAt: data.created_at as number,\n      updatedAt: data.updated_at ?? null,\n    });\n    return { data: mapped as any };\n  } catch (error) {\n    return handleError(error, 'Failed to parse and save resume.');\n  }\n}\n\nexport async function deleteResume(id: number) {\n  const { user } = await requireAuth();\n\n  try {\n    const { error } = await db\n      .from('resumes')\n      .delete()\n      .eq('id', id)\n      .eq('user_id', user.id);\n\n    if (error) return handleError(error, 'Failed to delete resume.');\n\n    revalidatePath('/resumes');\n    revalidatePath('/dashboard');\n    return { data: { success: true } };\n  } catch(e) {\n    return handleError(e, 'Failed to delete resume.')\n  }\n}\n\n\nexport async function deleteLetter(id: number) {\n  const { user } = await requireAuth();\n\n  try {\n    const { error } = await db\n      .from('letters')\n      .delete()\n      .eq('id', id)\n      .eq('user_id', user.id);\n\n    if (error) return handleError(error, 'Failed to delete letter.');\n\n    revalidatePath('/dashboard');\n    return { data: { success: true } };\n  } catch(e) {\n    return handleError(e, 'Failed to delete letter.')\n  }\n}\n\nexport async function deleteUserAccount() {\n  const { user } = await requireAuth();\n\n  try {\n    await db.from('letters').delete().eq('user_id', user.id);\n    await db.from('applications').delete().eq('user_id', user.id);\n    await db.from('resumes').delete().eq('user_id', user.id);\n    await db.from('users').delete().eq('id', user.id);\n\n    revalidatePath('/');\n    return { data: { success: true } };\n  } catch(e) {\n    return handleError(e, 'Failed to delete account.');\n  }\n}\n\nexport async function getLettersForUser(userId: number) {\n  const { user } = await requireAuth();\n  if (user.id !== userId) {\n    return { error: 'Unauthorized access' };\n  }\n\n  try {\n    const { data, error } = await db\n      .from('letters')\n      .select('*')\n      .eq('user_id', userId)\n      .order('created_at', { ascending: false });\n\n    if (error) return handleError(error, 'Failed to fetch letters.');\n\n    const parsedLetters = (data || []).map((l: any) => ({\n      id: l.id,\n      jobTitle: l.job_title,\n      company: l.company,\n      jobDesc: l.job_desc,\n      content: l.content,\n      tone: l.tone,\n      atsScore: l.ats_score,\n      userId: l.user_id,\n      resumeId: l.resume_id,\n      createdAt: new Date((l.created_at as number) * 1000),\n    }));\n\n    return { data: parsedLetters };\n  } catch (error) {\n    return handleError(error, 'Failed to fetch letters.');\n  }\n}\n\nexport async function deleteApplication(id: number) {\n  const { user } = await requireAuth();\n\n  try {\n    const { error } = await db\n      .from('applications')\n      .delete()\n      .eq('id', id)\n      .eq('user_id', user.id);\n\n    if (error) return handleError(error, 'Failed to delete application.');\n\n    revalidatePath('/applications');\n    revalidatePath('/dashboard');\n    return { data: { success: true } };\n  } catch (e) {\n    return handleError(e, 'Failed to delete application.');\n  }\n}\n\n\nexport async function autofillJobDetailsAction(input: AutofillJobDetailsInput): Promise<{data: AutofillJobDetailsOutput | null; error?: string}> {\n    try {\n        const result = await autofillJobDetails(input);\n        return { data: result };\n    } catch(e) {\n        return handleError(e, 'Failed to autofill job details.');\n    }\n}\n\nexport async function updateResume(resume: ParseResumeOutput & { id: number, title: string }) {\n  const { user } = await requireAuth();\n\n  try {\n    const { error } = await db\n      .from('resumes')\n      .update({\n        title: resume.title,\n        name: resume.name,\n        phone: resume.phone,\n        email: resume.email,\n        linkedin_url: resume.linkedinUrl,\n        portfolio_url: resume.portfolioUrl,\n        summary: resume.summary,\n        skills: typeof resume.skills === 'string' ? resume.skills : JSON.stringify(resume.skills),\n        experiences: typeof resume.experiences === 'string' ? resume.experiences : JSON.stringify(resume.experiences),\n        projects: typeof resume.projects === 'string' ? resume.projects : JSON.stringify(resume.projects),\n        education: typeof resume.education === 'string' ? resume.education : JSON.stringify(resume.education),\n        updated_at: Math.floor(Date.now() / 1000),\n      })\n      .eq('id', resume.id)\n      .eq('user_id', user.id);\n\n    if (error) return handleError(error, 'Failed to update resume.');\n\n    revalidatePath('/resumes');\n    revalidatePath('/dashboard');\n    return { data: { success: true } };\n  } catch(e) {\n    return handleError(e, 'Failed to update resume.');\n  }\n}\n"],"names":[],"mappings":";;;;;;IAgZsB,oBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file:///home/zsmile/Desktop/FitLetter_ai_web/src/components/ui/card.tsx"],"sourcesContent":["\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AACA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///home/zsmile/Desktop/FitLetter_ai_web/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 410, "column": 0}, "map": {"version":3,"sources":["file:///home/zsmile/Desktop/FitLetter_ai_web/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 520, "column": 0}, "map": {"version":3,"sources":["file:///home/zsmile/Desktop/FitLetter_ai_web/src/components/ui/button.tsx"],"sourcesContent":["\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-transform duration-200 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4WACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 580, "column": 0}, "map": {"version":3,"sources":["file:///home/zsmile/Desktop/FitLetter_ai_web/src/components/ui/sheet.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASA,MAAM,QAAQ,kKAAA,CAAA,OAAmB;AAEjC,MAAM,eAAe,kKAAA,CAAA,UAAsB;AAE3C,MAAM,aAAa,kKAAA,CAAA,QAAoB;AAEvC,MAAM,cAAc,kKAAA,CAAA,SAAqB;AAEzC,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAsB;QACrB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;QACT,KAAK;;;;;;AAGT,aAAa,WAAW,GAAG,kKAAA,CAAA,UAAsB,CAAC,WAAW;AAE7D,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,oMACA;IACE,UAAU;QACR,MAAM;YACJ,KAAK;YACL,QACE;YACF,MAAM;YACN,OACE;QACJ;IACF;IACA,iBAAiB;QACf,MAAM;IACR;AACF;AAOF,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,OAAO,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAsB;gBACrB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;oBAAE;gBAAK,IAAI;gBACtC,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAoB;wBAAC,WAAU;;0CAC9B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,aAAa,WAAW,GAAG,kKAAA,CAAA,UAAsB,CAAC,WAAW;AAE7D,MAAM,cAAc,CAAC,EACnB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,cAAc,CAAC,EACnB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,yCAAyC;QACtD,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG,kKAAA,CAAA,QAAoB,CAAC,WAAW;AAEzD,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA0B;QACzB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG,kKAAA,CAAA,cAA0B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 753, "column": 0}, "map": {"version":3,"sources":["file:///home/zsmile/Desktop/FitLetter_ai_web/src/hooks/use-media-query.ts"],"sourcesContent":["\n\"use client\"\n\nimport { useState, useEffect } from 'react';\n\nexport function useMediaQuery(query: string) {\n  const [matches, setMatches] = useState(false);\n\n  useEffect(() => {\n    if (typeof window === 'undefined') {\n      return;\n    }\n    \n    const media = window.matchMedia(query);\n    if (media.matches !== matches) {\n      setMatches(media.matches);\n    }\n    const listener = () => {\n      setMatches(media.matches);\n    };\n    media.addEventListener('change', listener);\n    return () => media.removeEventListener('change', listener);\n  }, [matches, query]);\n\n  return matches;\n}\n"],"names":[],"mappings":";;;AAGA;AAFA;;AAIO,SAAS,cAAc,KAAa;IACzC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,wCAAmC;YACjC;QACF;;QAEA,MAAM;QAIN,MAAM;IAKR,GAAG;QAAC;QAAS;KAAM;IAEnB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 780, "column": 0}, "map": {"version":3,"sources":["file:///home/zsmile/Desktop/FitLetter_ai_web/src/components/nav.tsx"],"sourcesContent":["\n'use client';\nimport { Button } from \"@/components/ui/button\";\nimport { Sheet, SheetContent, SheetHeader, SheetTitle, SheetTrigger } from \"@/components/ui/sheet\";\nimport { BarChart3, Briefcase, FileText, LayoutDashboard, LogOut, Menu, Settings } from \"lucide-react\";\nimport { usePathname, useRouter } from \"next/navigation\";\nimport { cn } from \"@/lib/utils\";\nimport { useMediaQuery } from \"@/hooks/use-media-query\";\nimport { useState, useTransition } from \"react\";\nimport { toast } from \"@/hooks/use-toast\";\n\nconst navItems = [\n    { href: '/dashboard', icon: LayoutDashboard, label: 'Dashboard' },\n    { href: '/applications', icon: Briefcase, label: 'Applications' },\n    { href: '/analytics', icon: BarChart3, label: 'Analytics' },\n    { href: '/resumes', icon: FileText, label: 'Resumes' },\n    { href: '/settings', icon: Settings, label: 'Settings' },\n]\n\nexport function Nav() {\n  const router = useRouter();\n  const pathname = usePathname();\n  const isDesktop = useMediaQuery(\"(min-width: 768px)\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [isPending, startTransition] = useTransition();\n\n  const handleNavigation = (href: string) => {\n    router.push(href);\n    setIsOpen(false);\n  }\n\n  const handleSignOut = () => {\n    startTransition(async () => {\n      try {\n        const response = await fetch('/api/auth/signout', {\n          method: 'POST',\n        });\n\n        if (response.ok) {\n          try {\n            localStorage.removeItem('fitletter_user_email');\n            localStorage.removeItem('fitletter_user_id');\n            localStorage.removeItem('fitletter_user_name');\n          } catch (_) {}\n          toast({\n            title: 'Signed Out',\n            description: 'You have been signed out successfully.',\n          });\n          router.push('/login');\n          router.refresh();\n        } else {\n          throw new Error('Sign out failed');\n        }\n      } catch (error) {\n        toast({\n          title: 'Error',\n          description: 'Failed to sign out. Please try again.',\n          variant: 'destructive',\n        });\n      }\n    });\n  };\n\n  const NavContent = () => (\n    <div className=\"flex flex-col gap-2 p-2 md:flex-row md:gap-1 md:rounded-lg md:border md:bg-background md:p-1 md:items-center\">\n      {navItems.map(item => (\n        <Button\n          key={item.href}\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={() => handleNavigation(item.href)}\n          className={cn(\n            \"w-full justify-start text-base md:text-sm\",\n            pathname === item.href && \"bg-muted font-semibold\"\n          )}\n        >\n          <item.icon className=\"mr-2\" />\n          {item.label}\n        </Button>\n      ))}\n      <div className=\"md:ml-auto\">\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={handleSignOut}\n          disabled={isPending}\n          className=\"w-full justify-start text-base md:text-sm text-muted-foreground hover:text-destructive\"\n        >\n          <LogOut className=\"mr-2\" />\n          Sign Out\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <nav className=\"flex w-full items-center gap-4 md:w-auto\">\n      <div className=\"flex items-center gap-2\">\n        <div className=\"rounded-lg bg-primary/10 p-2 text-primary\">\n          <FileText className=\"h-6 w-6\" />\n        </div>\n        <h1 className=\"font-headline text-2xl font-bold tracking-tight\">\n          FitLetter\n        </h1>\n      </div>\n      \n      {isDesktop ? (\n        <NavContent />\n      ) : (\n        <div className=\"ml-auto\">\n          <Sheet open={isOpen} onOpenChange={setIsOpen}>\n            <SheetTrigger asChild>\n              <Button variant=\"outline\" size=\"icon\">\n                <Menu />\n                <span className=\"sr-only\">Open navigation menu</span>\n              </Button>\n            </SheetTrigger>\n            <SheetContent side=\"left\">\n                <SheetHeader>\n                    <SheetTitle className=\"sr-only\">Navigation Menu</SheetTitle>\n                </SheetHeader>\n              <NavContent />\n            </SheetContent>\n          </Sheet>\n        </div>\n      )}\n    </nav>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1058, "column": 0}, "map": {"version":3,"sources":["file:///home/zsmile/Desktop/FitLetter_ai_web/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1082, "column": 0}, "map": {"version":3,"sources":["file:///home/zsmile/Desktop/FitLetter_ai_web/src/app/analytics/page.tsx"],"sourcesContent":["\n'use client';\nimport { getApplicationsForUser, getLettersForUser } from \"@/app/actions\";\nimport { Briefcase, Calendar, Target } from \"lucide-react\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { ChartContainer, ChartTooltip, ChartTooltipContent } from \"@/components/ui/chart\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { ResponsiveContainer, LineChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Line, PieChart, Pie } from \"recharts\";\nimport { useEffect, useState } from \"react\";\nimport { Application, Letter } from \"@/db/schema\";\nimport { format } from \"date-fns\";\nimport { Nav } from \"@/components/nav\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { useRouter } from \"next/navigation\";\n\ntype LetterWithDate = Omit<Letter, \"createdAt\"> & { createdAt: Date | null };\n\n\nexport default function AnalyticsPage() {\n  const [applications, setApplications] = useState<Application[]>([]);\n  const [letters, setLetters] = useState<LetterWithDate[]>([]);\n  const [loading, setLoading] = useState(true);\n  const router = useRouter();\n  const [userId, setUserId] = useState<number|null>(null);\n\n  useEffect(() => {\n     const storedId = localStorage.getItem('fitletter_user_id');\n    if (!storedId) {\n      router.push('/');\n      return;\n    }\n    const id = parseInt(storedId);\n    setUserId(id);\n\n    async function loadData() {\n        setLoading(true);\n        const [{data: appData}, {data: letterData}] = await Promise.all([\n            getApplicationsForUser(id), \n            getLettersForUser(id)\n        ]);\n\n        if (appData) {\n            setApplications(appData.map(a => ({...a, createdAt: a.createdAt ? new Date(a.createdAt * 1000) : null } as any)));\n        }\n        \n        if (letterData) {\n            setLetters(letterData as LetterWithDate[]);\n        }\n\n        setLoading(false);\n    }\n    loadData();\n  }, [router])\n\n  const atsScoreData = letters\n    .filter(l => l.atsScore && l.createdAt)\n    .sort((a,b) => a.createdAt!.getTime() - b.createdAt!.getTime())\n    .map(l => ({\n      date: format(l.createdAt!, 'MMM d'),\n      score: l.atsScore,\n  }));\n\n  const statusData = statusColumns.map(status => ({\n      name: status,\n      value: applications.filter(app => app.status === status).length,\n      fill: `hsl(var(--chart-${statusColumns.indexOf(status) + 1}))`\n  })).filter(s => s.value > 0);\n  \n\n    const applicationHistory = applications.map(app => ({\n      ...app,\n      date: app.createdAt ? format(new Date(app.createdAt), 'PP') : 'N/A'\n    }));\n\n    if(loading) {\n        return (\n            <div className=\"min-h-screen w-full bg-background/50\">\n              <main className=\"container mx-auto flex flex-col p-4 sm:p-8\">\n                <header className=\"mb-8 flex items-center justify-between\">\n                  <Nav />\n                </header>\n                <div className=\"grid gap-8\">\n                    <div className=\"grid grid-cols-1 gap-8 md:grid-cols-2\">\n                        <Card>\n                            <CardHeader>\n                                <Skeleton className=\"h-6 w-48\" />\n                                <Skeleton className=\"h-4 w-64\" />\n                            </CardHeader>\n                            <CardContent>\n                                <Skeleton className=\"h-64 w-full\" />\n                            </CardContent>\n                        </Card>\n                        <Card>\n                             <CardHeader>\n                                <Skeleton className=\"h-6 w-48\" />\n                                <Skeleton className=\"h-4 w-64\" />\n                            </CardHeader>\n                            <CardContent>\n                                <Skeleton className=\"h-64 w-full\" />\n                            </CardContent>\n                        </Card>\n                    </div>\n                     <Card>\n                        <CardHeader>\n                            <Skeleton className=\"h-6 w-48\" />\n                            <Skeleton className=\"h-4 w-64\" />\n                        </CardHeader>\n                        <CardContent>\n                             <Skeleton className=\"h-40 w-full\" />\n                        </CardContent>\n                    </Card>\n                </div>\n              </main>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"min-h-screen w-full bg-background/50\">\n          <main className=\"container mx-auto flex flex-col p-4 sm:p-8\">\n            <header className=\"mb-8 flex items-center justify-between\">\n              <Nav />\n            </header>\n            <div className=\"grid gap-8\">\n                {/* Top Row */}\n                <div className=\"grid grid-cols-1 gap-8 md:grid-cols-2\">\n                    <Card className=\"animate-fade-in-up\" style={{animationDelay: '0.2s'}}>\n                        <CardHeader>\n                            <CardTitle className=\"flex items-center gap-2\"><Target /> ATS Score Over Time</CardTitle>\n                            <CardDescription>Track the improvement of your resume's ATS score.</CardDescription>\n                        </CardHeader>\n                        <CardContent>\n                            {atsScoreData.length > 0 ? (\n                                <ChartContainer config={{score: {label: 'Score', color: 'hsl(var(--primary))'}}} className=\"h-64 w-full\">\n                                    <ResponsiveContainer>\n                                        <LineChart data={atsScoreData}>\n                                            <CartesianGrid strokeDasharray=\"3 3\" />\n                                            <XAxis dataKey=\"date\" />\n                                            <YAxis />\n                                            <Tooltip contentStyle={{backgroundColor: 'hsl(var(--background))'}}/>\n                                            <Legend />\n                                            <Line type=\"monotone\" dataKey=\"score\" stroke=\"hsl(var(--primary))\" />\n                                        </LineChart>\n                                    </ResponsiveContainer>\n                                </ChartContainer>\n                            ) : (\n                                <div className=\"flex h-64 items-center justify-center text-muted-foreground\">\n                                    No ATS scores to display yet.\n                                </div>\n                            )}\n                        </CardContent>\n                    </Card>\n                    <Card className=\"animate-fade-in-up\" style={{animationDelay: '0.3s'}}>\n                        <CardHeader>\n                            <CardTitle className=\"flex items-center gap-2\"><Briefcase/> Application Status Breakdown</CardTitle>\n                             <CardDescription>Visualize the current status of your applications.</CardDescription>\n                        </CardHeader>\n                        <CardContent>\n                            {statusData.length > 0 ? (\n                                <ChartContainer config={{}} className=\"h-64 w-full\">\n                                    <ResponsiveContainer>\n                                        <PieChart>\n                                            <Pie data={statusData} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={80} label />\n                                            <ChartTooltip content={<ChartTooltipContent />} />\n                                            <Legend />\n                                        </PieChart>\n                                    </ResponsiveContainer>\n                                </ChartContainer>\n                            ) : (\n                                 <div className=\"flex h-64 items-center justify-center text-muted-foreground\">\n                                    No application statuses to display yet.\n                                </div>\n                            )}\n                        </CardContent>\n                    </Card>\n                </div>\n\n                {/* Bottom Row */}\n                <Card className=\"animate-fade-in-up\" style={{animationDelay: '0.4s'}}>\n                    <CardHeader>\n                        <CardTitle className=\"flex items-center gap-2\"><Calendar /> Full Application History</CardTitle>\n                        <CardDescription>A detailed log of all your tracked applications.</CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                        <Table>\n                            <TableHeader>\n                                <TableRow>\n                                    <TableHead>Job Title</TableHead>\n                                    <TableHead>Company</TableHead>\n                                    <TableHead>Date Added</TableHead>\n                                    <TableHead>Status</TableHead>\n                                </TableRow>\n                            </TableHeader>\n                            <TableBody>\n                                {applicationHistory.length > 0 ? applicationHistory.map(app => (\n                                    <TableRow key={app.id}>\n                                        <TableCell className=\"font-medium\">{app.jobTitle}</TableCell>\n                                        <TableCell>{app.company}</TableCell>\n                                        <TableCell>{app.date}</TableCell>\n                                        <TableCell>{app.status}</TableCell>\n                                    </TableRow>\n                                )) : (\n                                    <TableRow>\n                                        <TableCell colSpan={4} className=\"h-24 text-center text-muted-foreground\">No applications added yet.</TableCell>\n                                    </TableRow>\n                                )}\n                            </TableBody>\n                        </Table>\n                    </CardContent>\n                </Card>\n            </div>\n          </main>\n        </div>\n    )\n}\n\nconst statusColumns: StatusColumn[] = ['Saved', 'Applied', 'Interviewing', 'Offer', 'Rejected'];\ntype StatusColumn = 'Saved' | 'Applied' | 'Interviewing' | 'Offer' | 'Rejected';\n"],"names":[],"mappings":";;;;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAZA;;;;;;;;;;;;;AAiBe,SAAS;IACtB,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IAClE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAoB,EAAE;IAC3D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAElD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACP,MAAM,WAAW,aAAa,OAAO,CAAC;QACvC,IAAI,CAAC,UAAU;YACb,OAAO,IAAI,CAAC;YACZ;QACF;QACA,MAAM,KAAK,SAAS;QACpB,UAAU;QAEV,eAAe;YACX,WAAW;YACX,MAAM,CAAC,EAAC,MAAM,OAAO,EAAC,EAAE,EAAC,MAAM,UAAU,EAAC,CAAC,GAAG,MAAM,QAAQ,GAAG,CAAC;gBAC5D,CAAA,GAAA,kJAAA,CAAA,yBAAsB,AAAD,EAAE;gBACvB,CAAA,GAAA,kJAAA,CAAA,oBAAiB,AAAD,EAAE;aACrB;YAED,IAAI,SAAS;gBACT,gBAAgB,QAAQ,GAAG,CAAC,CAAA,IAAK,CAAC;wBAAC,GAAG,CAAC;wBAAE,WAAW,EAAE,SAAS,GAAG,IAAI,KAAK,EAAE,SAAS,GAAG,QAAQ;oBAAK,CAAQ;YAClH;YAEA,IAAI,YAAY;gBACZ,WAAW;YACf;YAEA,WAAW;QACf;QACA;IACF,GAAG;QAAC;KAAO;IAEX,MAAM,eAAe,QAClB,MAAM,CAAC,CAAA,IAAK,EAAE,QAAQ,IAAI,EAAE,SAAS,EACrC,IAAI,CAAC,CAAC,GAAE,IAAM,EAAE,SAAS,CAAE,OAAO,KAAK,EAAE,SAAS,CAAE,OAAO,IAC3D,GAAG,CAAC,CAAA,IAAK,CAAC;YACT,MAAM,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,EAAE,SAAS,EAAG;YAC3B,OAAO,EAAE,QAAQ;QACrB,CAAC;IAED,MAAM,aAAa,cAAc,GAAG,CAAC,CAAA,SAAU,CAAC;YAC5C,MAAM;YACN,OAAO,aAAa,MAAM,CAAC,CAAA,MAAO,IAAI,MAAM,KAAK,QAAQ,MAAM;YAC/D,MAAM,CAAC,gBAAgB,EAAE,cAAc,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;QAClE,CAAC,GAAG,MAAM,CAAC,CAAA,IAAK,EAAE,KAAK,GAAG;IAGxB,MAAM,qBAAqB,aAAa,GAAG,CAAC,CAAA,MAAO,CAAC;YAClD,GAAG,GAAG;YACN,MAAM,IAAI,SAAS,GAAG,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,IAAI,SAAS,GAAG,QAAQ;QAChE,CAAC;IAED,IAAG,SAAS;QACR,qBACI,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAK,WAAU;;kCACd,8OAAC;wBAAO,WAAU;kCAChB,cAAA,8OAAC,yHAAA,CAAA,MAAG;;;;;;;;;;kCAEN,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;gCAAI,WAAU;;kDACX,8OAAC,gIAAA,CAAA,OAAI;;0DACD,8OAAC,gIAAA,CAAA,aAAU;;kEACP,8OAAC,oIAAA,CAAA,WAAQ;wDAAC,WAAU;;;;;;kEACpB,8OAAC,oIAAA,CAAA,WAAQ;wDAAC,WAAU;;;;;;;;;;;;0DAExB,8OAAC,gIAAA,CAAA,cAAW;0DACR,cAAA,8OAAC,oIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;;;;;;;;;;;;kDAG5B,8OAAC,gIAAA,CAAA,OAAI;;0DACA,8OAAC,gIAAA,CAAA,aAAU;;kEACR,8OAAC,oIAAA,CAAA,WAAQ;wDAAC,WAAU;;;;;;kEACpB,8OAAC,oIAAA,CAAA,WAAQ;wDAAC,WAAU;;;;;;;;;;;;0DAExB,8OAAC,gIAAA,CAAA,cAAW;0DACR,cAAA,8OAAC,oIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;0CAI/B,8OAAC,gIAAA,CAAA,OAAI;;kDACF,8OAAC,gIAAA,CAAA,aAAU;;0DACP,8OAAC,oIAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;0DACpB,8OAAC,oIAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;;;;;;;kDAExB,8OAAC,gIAAA,CAAA,cAAW;kDACP,cAAA,8OAAC,oIAAA,CAAA,WAAQ;4CAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAO7C;IAEA,qBACI,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAK,WAAU;;8BACd,8OAAC;oBAAO,WAAU;8BAChB,cAAA,8OAAC,yHAAA,CAAA,MAAG;;;;;;;;;;8BAEN,8OAAC;oBAAI,WAAU;;sCAEX,8OAAC;4BAAI,WAAU;;8CACX,8OAAC,gIAAA,CAAA,OAAI;oCAAC,WAAU;oCAAqB,OAAO;wCAAC,gBAAgB;oCAAM;;sDAC/D,8OAAC,gIAAA,CAAA,aAAU;;8DACP,8OAAC,gIAAA,CAAA,YAAS;oDAAC,WAAU;;sEAA0B,8OAAC,sMAAA,CAAA,SAAM;;;;;wDAAG;;;;;;;8DACzD,8OAAC,gIAAA,CAAA,kBAAe;8DAAC;;;;;;;;;;;;sDAErB,8OAAC,gIAAA,CAAA,cAAW;sDACP,aAAa,MAAM,GAAG,kBACnB,8OAAC,iIAAA,CAAA,iBAAc;gDAAC,QAAQ;oDAAC,OAAO;wDAAC,OAAO;wDAAS,OAAO;oDAAqB;gDAAC;gDAAG,WAAU;0DACvF,cAAA,8OAAC,mKAAA,CAAA,sBAAmB;8DAChB,cAAA,8OAAC,qJAAA,CAAA,YAAS;wDAAC,MAAM;;0EACb,8OAAC,6JAAA,CAAA,gBAAa;gEAAC,iBAAgB;;;;;;0EAC/B,8OAAC,qJAAA,CAAA,QAAK;gEAAC,SAAQ;;;;;;0EACf,8OAAC,qJAAA,CAAA,QAAK;;;;;0EACN,8OAAC,uJAAA,CAAA,UAAO;gEAAC,cAAc;oEAAC,iBAAiB;gEAAwB;;;;;;0EACjE,8OAAC,sJAAA,CAAA,SAAM;;;;;0EACP,8OAAC,oJAAA,CAAA,OAAI;gEAAC,MAAK;gEAAW,SAAQ;gEAAQ,QAAO;;;;;;;;;;;;;;;;;;;;;qEAKzD,8OAAC;gDAAI,WAAU;0DAA8D;;;;;;;;;;;;;;;;;8CAMzF,8OAAC,gIAAA,CAAA,OAAI;oCAAC,WAAU;oCAAqB,OAAO;wCAAC,gBAAgB;oCAAM;;sDAC/D,8OAAC,gIAAA,CAAA,aAAU;;8DACP,8OAAC,gIAAA,CAAA,YAAS;oDAAC,WAAU;;sEAA0B,8OAAC,4MAAA,CAAA,YAAS;;;;;wDAAE;;;;;;;8DAC1D,8OAAC,gIAAA,CAAA,kBAAe;8DAAC;;;;;;;;;;;;sDAEtB,8OAAC,gIAAA,CAAA,cAAW;sDACP,WAAW,MAAM,GAAG,kBACjB,8OAAC,iIAAA,CAAA,iBAAc;gDAAC,QAAQ,CAAC;gDAAG,WAAU;0DAClC,cAAA,8OAAC,mKAAA,CAAA,sBAAmB;8DAChB,cAAA,8OAAC,oJAAA,CAAA,WAAQ;;0EACL,8OAAC,+IAAA,CAAA,MAAG;gEAAC,MAAM;gEAAY,SAAQ;gEAAQ,SAAQ;gEAAO,IAAG;gEAAM,IAAG;gEAAM,aAAa;gEAAI,KAAK;;;;;;0EAC9F,8OAAC,iIAAA,CAAA,eAAY;gEAAC,uBAAS,8OAAC,iIAAA,CAAA,sBAAmB;;;;;;;;;;0EAC3C,8OAAC,sJAAA,CAAA,SAAM;;;;;;;;;;;;;;;;;;;;qEAKlB,8OAAC;gDAAI,WAAU;0DAA8D;;;;;;;;;;;;;;;;;;;;;;;sCAS9F,8OAAC,gIAAA,CAAA,OAAI;4BAAC,WAAU;4BAAqB,OAAO;gCAAC,gBAAgB;4BAAM;;8CAC/D,8OAAC,gIAAA,CAAA,aAAU;;sDACP,8OAAC,gIAAA,CAAA,YAAS;4CAAC,WAAU;;8DAA0B,8OAAC,0MAAA,CAAA,WAAQ;;;;;gDAAG;;;;;;;sDAC3D,8OAAC,gIAAA,CAAA,kBAAe;sDAAC;;;;;;;;;;;;8CAErB,8OAAC,gIAAA,CAAA,cAAW;8CACR,cAAA,8OAAC,iIAAA,CAAA,QAAK;;0DACF,8OAAC,iIAAA,CAAA,cAAW;0DACR,cAAA,8OAAC,iIAAA,CAAA,WAAQ;;sEACL,8OAAC,iIAAA,CAAA,YAAS;sEAAC;;;;;;sEACX,8OAAC,iIAAA,CAAA,YAAS;sEAAC;;;;;;sEACX,8OAAC,iIAAA,CAAA,YAAS;sEAAC;;;;;;sEACX,8OAAC,iIAAA,CAAA,YAAS;sEAAC;;;;;;;;;;;;;;;;;0DAGnB,8OAAC,iIAAA,CAAA,YAAS;0DACL,mBAAmB,MAAM,GAAG,IAAI,mBAAmB,GAAG,CAAC,CAAA,oBACpD,8OAAC,iIAAA,CAAA,WAAQ;;0EACL,8OAAC,iIAAA,CAAA,YAAS;gEAAC,WAAU;0EAAe,IAAI,QAAQ;;;;;;0EAChD,8OAAC,iIAAA,CAAA,YAAS;0EAAE,IAAI,OAAO;;;;;;0EACvB,8OAAC,iIAAA,CAAA,YAAS;0EAAE,IAAI,IAAI;;;;;;0EACpB,8OAAC,iIAAA,CAAA,YAAS;0EAAE,IAAI,MAAM;;;;;;;uDAJX,IAAI,EAAE;;;;8EAOrB,8OAAC,iIAAA,CAAA,WAAQ;8DACL,cAAA,8OAAC,iIAAA,CAAA,YAAS;wDAAC,SAAS;wDAAG,WAAU;kEAAyC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWlH;AAEA,MAAM,gBAAgC;IAAC;IAAS;IAAW;IAAgB;IAAS;CAAW","debugId":null}}]
}